version: '3'
services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  middleware_service:
    build: ./middleware
    ports:
      - "5000:5000"
    volumes:
      - ./files:/files:rw  # Для хранения файлов
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    restart: unless-stopped
    entrypoint: ["sh", "-c", "sleep 20 && python service.py"]  # Задержка перед запуском

  python_worker_example:
    build: ./workers/python_worker_example
    depends_on:
      redis:
        condition: service_healthy  # Проверка готовности RabbitMQ
    environment:
      - RABBITMQ_HOST=rabbitmq
    restart: unless-stopped
    entrypoint: ["sh", "-c", "sleep 20 && python worker.py"]  # Задержка перед запуском
    scale: 1  # Количество воркеров

  csharp_worker_example:
    build:
      context: ./workers/csharp_worker_example
      target: final
    depends_on:
      redis:
        condition: service_healthy  # Проверка готовности RabbitMQ
    environment:
      - RABBITMQ_HOST=rabbitmq
    restart: unless-stopped
    entrypoint: ["sh", "-c", "sleep 20 && dotnet CsharpWorkerExample.dll"]  # Задержка перед запуском
    scale: 1  # Количество воркеров

  video_worker_example:
    build: ./workers/video_worker_example
    volumes:
      - ./files:/files:rw  # Для хранения файлов
    depends_on:
      redis:
        condition: service_healthy  # Проверка готовности RabbitMQ
    environment:
      - RABBITMQ_HOST=rabbitmq
    restart: unless-stopped
    entrypoint: ["sh", "-c", "sleep 20 && python worker.py"]  # Задержка перед запуском
    scale: 1  # Количество воркеров